{"version":3,"sources":["hours.js","speakers.js","tags.js"],"names":["document","querySelector","search","categoryId","day","days","querySelectorAll","hiddenDayInput","hiddenHourInput","searchTerm","e","target","name","value","previousHour","classList","remove","Object","values","includes","async","url","response","fetch","events","hourList","forEach","li","add","takenHours","map","event","hourId","hourListArray","Array","from","filter","dataset","hourid","hour","addEventListener","selectHour","getAvailableHours","json","searchEvents","speakerInput","speakers","filteredSpeakers","listSpeakers","hiddenSpeaker","selectSpeaker","speaker","previousSpeaker","speakerId","arraySpeakers","trim","lastName","id","formatSpeakers","getSpeakers","length","expression","RegExp","toLowerCase","firstChild","removeChild","speakerHTML","createElement","textContent","onclick","appendChild","noResults","showSpeakers","tagsInput","tagsDiv","tagsHiddenInput","tags","showTags","tag","tagDiv","ondblclick","deleteTag","updateHiddenInput","join","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const hours = document.querySelector('#hours');\r\n\r\n    if(hours){\r\n\r\n        let search = {\r\n            categoryId: '',\r\n            day: ''\r\n        }\r\n\r\n        const categoryId = document.querySelector('[name=\"categoryId\"]');\r\n        const days = document.querySelectorAll('[name=\"day\"]');\r\n        const hiddenDayInput = document.querySelector('[name=\"dayId\"]');\r\n        const hiddenHourInput = document.querySelector('[name=\"hourId\"]');\r\n        \r\n        categoryId.addEventListener('change', searchTerm);\r\n        days.forEach(day => day.addEventListener('change', searchTerm))\r\n\r\n        function searchTerm(e){\r\n            search[e.target.name] = e.target.value;\r\n\r\n            hiddenHourInput.value = '';\r\n            hiddenDayInput.value = '';\r\n            \r\n            const previousHour = document.querySelector('.hours__hour--selected');\r\n            if(previousHour){\r\n                previousHour.classList.remove('hours__hour--selected');\r\n            }\r\n\r\n            if(Object.values(search).includes('')){\r\n                return;\r\n            }\r\n            searchEvents();\r\n        }\r\n        \r\n        async function searchEvents(){\r\n            const {day, categoryId} = search;\r\n            const url = `/api/events-schedule?day=${day}&categoryId=${categoryId}`;\r\n            \r\n            const response = await fetch(url);\r\n            const events = await response.json();\r\n\r\n            getAvailableHours(events);\r\n        }\r\n\r\n        function getAvailableHours(events){\r\n            const hourList = document.querySelectorAll('#hours li');\r\n            hourList.forEach(li => li.classList.add('hours__hour--disabled'));\r\n\r\n\r\n            const takenHours = events.map(event => event.hourId);\r\n            const hourListArray = Array.from(hourList);\r\n            const result = hourListArray.filter(li => !takenHours.includes(li.dataset.hourid));\r\n\r\n            result.forEach(li => li.classList.remove('hours__hour--disabled'));\r\n\r\n            const availableHours = document.querySelectorAll('#hours li:not(.hours__hour--disabled)');\r\n            availableHours.forEach(hour => hour.addEventListener('click', selectHour));\r\n        }\r\n\r\n        function selectHour(e){\r\n            const previousHour = document.querySelector('.hours__hour--selected');\r\n            if(previousHour){\r\n                previousHour.classList.remove('hours__hour--selected');\r\n            }\r\n            e.target.classList.add('hours__hour--selected')\r\n\r\n            hiddenHourInput.value = e.target.dataset.hourid;\r\n            hiddenDayInput.value = document.querySelector('[name=\"day\"]:checked').value;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const speakerInput = document.querySelector('#speakers');\r\n\r\n    if (speakerInput) {\r\n        let speakers = [];\r\n        let filteredSpeakers = [];\r\n\r\n        const listSpeakers = document.querySelector('#speakers-list');\r\n        const hiddenSpeaker = document.querySelector('[name=\"speakerId\"]');\r\n\r\n        getSpeakers();\r\n\r\n        speakerInput.addEventListener('input', searchSpeaker);\r\n\r\n        async function getSpeakers() {\r\n            const url = `/api/speakers`;\r\n            \r\n            const response = await fetch(url);\r\n            const result = await response.json();\r\n\r\n            formatSpeakers(result);\r\n        }\r\n\r\n        function formatSpeakers(arraySpeakers = []){\r\n            speakers = arraySpeakers.map( speaker => {\r\n                return {\r\n                    name: `${speaker.name.trim()} ${speaker.lastName.trim()}`,\r\n                    id: speaker.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function searchSpeaker(e){\r\n            const search = e.target.value.trim();\r\n            if(search.length >= 3){\r\n                const expression = new RegExp(search, 'i');\r\n                filteredSpeakers = speakers.filter( speaker => {\r\n                    if(speaker.name.toLowerCase().search(expression) != -1){\r\n                        return speaker;\r\n                    }\r\n                });\r\n            } else{\r\n                filteredSpeakers = [];\r\n            }\r\n            showSpeakers();\r\n        }\r\n\r\n        function showSpeakers(){\r\n            while(listSpeakers.firstChild){\r\n                listSpeakers.removeChild(listSpeakers.firstChild);\r\n            }\r\n\r\n            if(filteredSpeakers.length > 0){\r\n                filteredSpeakers.forEach( speaker => {\r\n                    const speakerHTML = document.createElement('li');\r\n                    speakerHTML.classList.add('speakers-list__speaker');\r\n                    speakerHTML.textContent = speaker.name;\r\n                    speakerHTML.dataset.speakerId = speaker.id;\r\n                    speakerHTML.onclick = selectSpeaker;\r\n\r\n                    listSpeakers.appendChild(speakerHTML);\r\n                })\r\n            } else{\r\n                const noResults = document.createElement('P');\r\n                noResults.classList.add('speakers-list__no-result');\r\n                noResults.textContent = 'No Results Found';\r\n                listSpeakers.appendChild(noResults);\r\n            }\r\n        }\r\n\r\n        function selectSpeaker(e){\r\n            const speaker = e.target;\r\n\r\n            const previousSpeaker = document.querySelector('.speakers-list__speaker--selected');\r\n            if(previousSpeaker){\r\n                previousSpeaker.classList.remove('speakers-list__speaker--selected');\r\n            }\r\n\r\n            speaker.classList.add('speakers-list__speaker--selected');\r\n\r\n            hiddenSpeaker.value = speaker.dataset.speakerId;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags__input');\r\n\r\n    if(tagsInput){\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsHiddenInput = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n        if(tagsHiddenInput.value !== ''){\r\n            tags = tagsHiddenInput.value.split(',');\r\n            showTags();\r\n        }\r\n\r\n        tagsInput.addEventListener('keypress', saveTag);\r\n\r\n        function saveTag(e){\r\n            if(e.keyCode === 44){\r\n                if(e.target.value.trim() === '' || e.target.value < 1){\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                \r\n                showTags();\r\n            }\r\n        }\r\n\r\n        function showTags(){\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const tagDiv = document.createElement('LI');\r\n                tagDiv.classList.add('form__tag');\r\n                tagDiv.textContent = tag;\r\n                tagDiv.ondblclick = deleteTag;\r\n                tagsDiv.appendChild(tagDiv);\r\n            })\r\n\r\n            updateHiddenInput();\r\n        }\r\n\r\n        function deleteTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            updateHiddenInput();\r\n        }\r\n\r\n        function updateHiddenInput(){\r\n            tagsHiddenInput.value = tags.join(',');\r\n        }\r\n    }\r\n})();"]}