{"version":3,"sources":["hours.js","speakers.js","tags.js"],"names":["document","querySelector","categoryId","days","querySelectorAll","hiddenDayInput","hiddenHourInput","addEventListener","searchTerm","forEach","day","search","value","e","target","name","previousHour","classList","remove","Object","values","includes","searchEvents","async","url","response","fetch","events","hourList","li","add","takenHours","map","event","hourId","hourListArray","Array","from","filter","dataset","hourid","hour","selectHour","getAvailableHours","json","selectedHour","onclick","speakerInput","speakers","filteredSpeakers","listSpeakers","hiddenSpeaker","selectSpeaker","speaker","previousSpeaker","speakerId","arraySpeakers","trim","lastName","id","formatSpeakers","getSpeakers","length","expression","RegExp","toLowerCase","firstChild","removeChild","speakerHTML","createElement","textContent","appendChild","noResults","showSpeakers","getSpeaker","tagsInput","tagsDiv","tagsHiddenInput","tags","showTags","tag","tagDiv","ondblclick","deleteTag","updateHiddenInput","join","split","keyCode","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,MAAAC,EAAAF,SAAAC,cAAA,uBACAE,EAAAH,SAAAI,iBAAA,gBACAC,EAAAL,SAAAC,cAAA,kBACAK,EAAAN,SAAAC,cAAA,mBAEAC,EAAAK,iBAAA,SAAAC,GACAL,EAAAM,QAAAC,GAAAA,EAAAH,iBAAA,SAAAC,IAEA,IAAAG,EAAA,CACAT,YAAAA,EAAAU,OAAA,GACAF,KAAAL,EAAAO,OAAA,IAgBA,SAAAJ,EAAAK,GACAF,EAAAE,EAAAC,OAAAC,MAAAF,EAAAC,OAAAF,MAEAN,EAAAM,MAAA,GACAP,EAAAO,MAAA,GAEA,MAAAI,EAAAhB,SAAAC,cAAA,0BACAe,GACAA,EAAAC,UAAAC,OAAA,yBAGAC,OAAAC,OAAAT,GAAAU,SAAA,KAGAC,IAGAC,eAAAD,IACA,MAAAZ,IAAAA,EAAAR,WAAAA,GAAAS,EACAa,EAAA,4BAAAd,gBAAAR,IAEAuB,QAAAC,MAAAF,IAMA,SAAAG,GACA,MAAAC,EAAA5B,SAAAI,iBAAA,aACAwB,EAAAnB,QAAAoB,GAAAA,EAAAZ,UAAAa,IAAA,0BAGA,MAAAC,EAAAJ,EAAAK,IAAAC,GAAAA,EAAAC,QACAC,EAAAC,MAAAC,KAAAT,GACAO,EAAAG,OAAAT,IAAAE,EAAAV,SAAAQ,EAAAU,QAAAC,SAEA/B,QAAAoB,GAAAA,EAAAZ,UAAAC,OAAA,0BAEAlB,SAAAI,iBAAA,yCACAK,QAAAgC,GAAAA,EAAAlC,iBAAA,QAAAmC,IAfAC,OAFAlB,EAAAmB,QAoBA,SAAAF,EAAA7B,GACA,MAAAG,EAAAhB,SAAAC,cAAA,0BACAe,GACAA,EAAAC,UAAAC,OAAA,yBAEAL,EAAAC,OAAAG,UAAAa,IAAA,yBAEAxB,EAAAM,MAAAC,EAAAC,OAAAyB,QAAAC,OACAnC,EAAAO,MAAAZ,SAAAC,cAAA,wBAAAW,MA/DAO,OAAAC,OAAAT,GAAAU,SAAA,KACA,iBACAC,IACA,MAAAuB,EAAA7C,SAAAC,cAAA,iBAAAK,EAAAM,WAEAiC,EAAA5B,UAAAC,OAAA,yBACA2B,EAAA5B,UAAAa,IAAA,yBAEAe,EAAAC,QAAAJ,GAPA,IAlBA,GCAA,WACA,MAAAK,EAAA/C,SAAAC,cAAA,aAEA,GAAA8C,EAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GAEA,MAAAC,EAAAlD,SAAAC,cAAA,kBACAkD,EAAAnD,SAAAC,cAAA,sBAkFA,SAAAmD,EAAAvC,GACA,MAAAwC,EAAAxC,EAAAC,OAEAwC,EAAAtD,SAAAC,cAAA,qCACAqD,GACAA,EAAArC,UAAAC,OAAA,oCAGAmC,EAAApC,UAAAa,IAAA,oCAEAqB,EAAAvC,MAAAyC,EAAAd,QAAAgB,WA1EAhC,iBACA,MAEAE,QAAAC,MAFA,kBAgBA,SAAA8B,EAAA,IACAR,EAAAQ,EAAAxB,IAAAqB,IACA,CACAtC,KAAA,GAAAsC,EAAAtC,KAAA0C,UAAAJ,EAAAK,SAAAD,SACAE,GAAAN,EAAAM,MAfAC,OAFAnC,EAAAmB,QApBAiB,GACAd,EAAAxC,iBAAA,SAyCA,SAAAM,GACA,MAAAF,EAAAE,EAAAC,OAAAF,MAAA6C,OACA,GAAA9C,EAAAmD,QAAA,EAAA,CACA,MAAAC,EAAA,IAAAC,OAAArD,EAAA,KACAsC,EAAAD,EAAAV,OAAAe,IACA,IAAA,GAAAA,EAAAtC,KAAAkD,cAAAtD,OAAAoD,GACA,OAAAV,SAIAJ,EAAA,IAKA,WACA,KAAAC,EAAAgB,YACAhB,EAAAiB,YAAAjB,EAAAgB,YAGA,GAAAjB,EAAAa,OAAA,EACAb,EAAAxC,QAAA4C,IACA,MAAAe,EAAApE,SAAAqE,cAAA,MACAD,EAAAnD,UAAAa,IAAA,0BACAsC,EAAAE,YAAAjB,EAAAtC,KACAqD,EAAA7B,QAAAgB,UAAAF,EAAAM,GACAS,EAAAtB,QAAAM,EAEAF,EAAAqB,YAAAH,SAEA,CACA,MAAAI,EAAAxE,SAAAqE,cAAA,KACAG,EAAAvD,UAAAa,IAAA,4BACA0C,EAAAF,YAAA,mBACApB,EAAAqB,YAAAC,IAtBAC,MAnDAtB,EAAAvC,OACA,WACA,MAAAyC,QAoBA9B,eAAAoC,GACA,MAAAnC,EAAA,mBAAAmC,EACAlC,QAAAC,MAAAF,GAGA,aAFAC,EAAAmB,OAvBA8B,CAAAvB,EAAAvC,QACAG,KAAAA,EAAA2C,SAAAA,GAAAL,EAEAe,EAAApE,SAAAqE,cAAA,MACAD,EAAAnD,UAAAa,IAAA,yBAAA,oCACAsC,EAAAE,YAAA,GAAAvD,EAAA0C,UAAAC,EAAAD,SAEAP,EAAAqB,YAAAH,IARA,IAdA,GCAA,WACA,MAAAO,EAAA3E,SAAAC,cAAA,gBAEA,GAAA0E,EAAA,CACA,MAAAC,EAAA5E,SAAAC,cAAA,SACA4E,EAAA7E,SAAAC,cAAA,iBACA,IAAA6E,EAAA,GAqBA,SAAAC,IACAH,EAAAN,YAAA,GACAQ,EAAArE,QAAAuE,IACA,MAAAC,EAAAjF,SAAAqE,cAAA,MACAY,EAAAhE,UAAAa,IAAA,aACAmD,EAAAX,YAAAU,EACAC,EAAAC,WAAAC,EACAP,EAAAL,YAAAU,KAGAG,IAGA,SAAAD,EAAAtE,GACAA,EAAAC,OAAAI,SACA4D,EAAAA,EAAAxC,OAAA0C,GAAAA,IAAAnE,EAAAC,OAAAwD,aACAc,IAGA,SAAAA,IACAP,EAAAjE,MAAAkE,EAAAO,KAAA,KAxCA,KAAAR,EAAAjE,QACAkE,EAAAD,EAAAjE,MAAA0E,MAAA,KACAP,KAGAJ,EAAApE,iBAAA,YAEA,SAAAM,GACA,GAAA,KAAAA,EAAA0E,QAAA,CACA,GAAA,KAAA1E,EAAAC,OAAAF,MAAA6C,QAAA5C,EAAAC,OAAAF,MAAA,EACA,OAEAC,EAAA2E,iBACAV,EAAA,IAAAA,EAAAjE,EAAAC,OAAAF,MAAA6C,QACAkB,EAAA/D,MAAA,GAEAmE,SAvBA","file":"bundle.js","sourcesContent":["(function(){\r\n    const hours = document.querySelector('#hours');\r\n\r\n    if(hours){\r\n        const categoryId = document.querySelector('[name=\"categoryId\"]');\r\n        const days = document.querySelectorAll('[name=\"day\"]');\r\n        const hiddenDayInput = document.querySelector('[name=\"dayId\"]');\r\n        const hiddenHourInput = document.querySelector('[name=\"hourId\"]');\r\n        \r\n        categoryId.addEventListener('change', searchTerm);\r\n        days.forEach(day => day.addEventListener('change', searchTerm))\r\n\r\n        let search = {\r\n            categoryId: +categoryId.value || '',\r\n            day: +hiddenDayInput.value || ''\r\n        }\r\n\r\n        if(!Object.values(search).includes('')){\r\n            (async() => {\r\n                await searchEvents();\r\n                const selectedHour = document.querySelector(`[data-hourid=\"${hiddenHourInput.value}\"]`);\r\n    \r\n                selectedHour.classList.remove('hours__hour--disabled');\r\n                selectedHour.classList.add('hours__hour--selected');\r\n\r\n                selectedHour.onclick = selectHour;\r\n            })();\r\n        }\r\n\r\n\r\n        function searchTerm(e){\r\n            search[e.target.name] = e.target.value;\r\n\r\n            hiddenHourInput.value = '';\r\n            hiddenDayInput.value = '';\r\n            \r\n            const previousHour = document.querySelector('.hours__hour--selected');\r\n            if(previousHour){\r\n                previousHour.classList.remove('hours__hour--selected');\r\n            }\r\n\r\n            if(Object.values(search).includes('')){\r\n                return;\r\n            }\r\n            searchEvents();\r\n        }\r\n        \r\n        async function searchEvents(){\r\n            const {day, categoryId} = search;\r\n            const url = `/api/events-schedule?day=${day}&categoryId=${categoryId}`;\r\n            \r\n            const response = await fetch(url);\r\n            const events = await response.json();\r\n\r\n            getAvailableHours(events);\r\n        }\r\n\r\n        function getAvailableHours(events){\r\n            const hourList = document.querySelectorAll('#hours li');\r\n            hourList.forEach(li => li.classList.add('hours__hour--disabled'));\r\n\r\n\r\n            const takenHours = events.map(event => event.hourId);\r\n            const hourListArray = Array.from(hourList);\r\n            const result = hourListArray.filter(li => !takenHours.includes(li.dataset.hourid));\r\n\r\n            result.forEach(li => li.classList.remove('hours__hour--disabled'));\r\n\r\n            const availableHours = document.querySelectorAll('#hours li:not(.hours__hour--disabled)');\r\n            availableHours.forEach(hour => hour.addEventListener('click', selectHour));\r\n        }\r\n\r\n        function selectHour(e){\r\n            const previousHour = document.querySelector('.hours__hour--selected');\r\n            if(previousHour){\r\n                previousHour.classList.remove('hours__hour--selected');\r\n            }\r\n            e.target.classList.add('hours__hour--selected')\r\n\r\n            hiddenHourInput.value = e.target.dataset.hourid;\r\n            hiddenDayInput.value = document.querySelector('[name=\"day\"]:checked').value;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const speakerInput = document.querySelector('#speakers');\r\n\r\n    if (speakerInput) {\r\n        let speakers = [];\r\n        let filteredSpeakers = [];\r\n\r\n        const listSpeakers = document.querySelector('#speakers-list');\r\n        const hiddenSpeaker = document.querySelector('[name=\"speakerId\"]');\r\n\r\n        getSpeakers();\r\n        speakerInput.addEventListener('input', searchSpeaker);\r\n\r\n        if(hiddenSpeaker.value){\r\n            (async() => {\r\n                const speaker = await getSpeaker(hiddenSpeaker.value);\r\n                const {name, lastName} = speaker;\r\n                \r\n                const speakerHTML = document.createElement('li');\r\n                speakerHTML.classList.add('speakers-list__speaker', 'speakers-list__speaker--selected');\r\n                speakerHTML.textContent = `${name.trim()} ${lastName.trim()}`;\r\n\r\n                listSpeakers.appendChild(speakerHTML);\r\n            })();\r\n        }\r\n\r\n        async function getSpeakers() {\r\n            const url = `/api/speakers`;\r\n            \r\n            const response = await fetch(url);\r\n            const result = await response.json();\r\n\r\n            formatSpeakers(result);\r\n        }\r\n\r\n        async function getSpeaker(id){\r\n            const url = `/api/speaker?id=${id}`;\r\n            const response = await fetch(url);\r\n            const result = await response.json();\r\n\r\n            return result;\r\n        }\r\n\r\n        function formatSpeakers(arraySpeakers = []){\r\n            speakers = arraySpeakers.map( speaker => {\r\n                return {\r\n                    name: `${speaker.name.trim()} ${speaker.lastName.trim()}`,\r\n                    id: speaker.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function searchSpeaker(e){\r\n            const search = e.target.value.trim();\r\n            if(search.length >= 3){\r\n                const expression = new RegExp(search, 'i');\r\n                filteredSpeakers = speakers.filter( speaker => {\r\n                    if(speaker.name.toLowerCase().search(expression) != -1){\r\n                        return speaker;\r\n                    }\r\n                });\r\n            } else{\r\n                filteredSpeakers = [];\r\n            }\r\n            showSpeakers();\r\n        }\r\n\r\n        function showSpeakers(){\r\n            while(listSpeakers.firstChild){\r\n                listSpeakers.removeChild(listSpeakers.firstChild);\r\n            }\r\n\r\n            if(filteredSpeakers.length > 0){\r\n                filteredSpeakers.forEach( speaker => {\r\n                    const speakerHTML = document.createElement('li');\r\n                    speakerHTML.classList.add('speakers-list__speaker');\r\n                    speakerHTML.textContent = speaker.name;\r\n                    speakerHTML.dataset.speakerId = speaker.id;\r\n                    speakerHTML.onclick = selectSpeaker;\r\n\r\n                    listSpeakers.appendChild(speakerHTML);\r\n                })\r\n            } else{\r\n                const noResults = document.createElement('P');\r\n                noResults.classList.add('speakers-list__no-result');\r\n                noResults.textContent = 'No Results Found';\r\n                listSpeakers.appendChild(noResults);\r\n            }\r\n        }\r\n\r\n        function selectSpeaker(e){\r\n            const speaker = e.target;\r\n\r\n            const previousSpeaker = document.querySelector('.speakers-list__speaker--selected');\r\n            if(previousSpeaker){\r\n                previousSpeaker.classList.remove('speakers-list__speaker--selected');\r\n            }\r\n\r\n            speaker.classList.add('speakers-list__speaker--selected');\r\n\r\n            hiddenSpeaker.value = speaker.dataset.speakerId;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags__input');\r\n\r\n    if(tagsInput){\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsHiddenInput = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n        if(tagsHiddenInput.value !== ''){\r\n            tags = tagsHiddenInput.value.split(',');\r\n            showTags();\r\n        }\r\n\r\n        tagsInput.addEventListener('keypress', saveTag);\r\n\r\n        function saveTag(e){\r\n            if(e.keyCode === 44){\r\n                if(e.target.value.trim() === '' || e.target.value < 1){\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                \r\n                showTags();\r\n            }\r\n        }\r\n\r\n        function showTags(){\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const tagDiv = document.createElement('LI');\r\n                tagDiv.classList.add('form__tag');\r\n                tagDiv.textContent = tag;\r\n                tagDiv.ondblclick = deleteTag;\r\n                tagsDiv.appendChild(tagDiv);\r\n            })\r\n\r\n            updateHiddenInput();\r\n        }\r\n\r\n        function deleteTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            updateHiddenInput();\r\n        }\r\n\r\n        function updateHiddenInput(){\r\n            tagsHiddenInput.value = tags.join(',');\r\n        }\r\n    }\r\n})();"]}